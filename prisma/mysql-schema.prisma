generator client {
  provider = "prisma-client-js"
  output = "./mysql-client"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DATABASE_URL")
}

model Card {
  id                        Int      @id @default(autoincrement())
  positionX                 Int?
  positionY                 Int?
  color                     String   @db.VarChar(7)
  value                     Int
  round                     Int
  player                    Int
  Round                     Round    @relation(fields: [round], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Card_ibfk_1")
  Player                    Player   @relation(fields: [player], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Card_ibfk_2")
  Series_Series_startToCard Series[] @relation("Series_startToCard")
  Series_Series_endToCard   Series[] @relation("Series_endToCard")

  @@index([player], map: "player")
  @@index([round], map: "round")
}

model Game {
  id            Int      @id @default(autoincrement())
  accessCode    String   @db.VarChar(255)
  roundsToReach Int?
  isOpen        Boolean?
  Player        Player[]
  Round         Round[]
}

model Player {
  id        Int      @id @default(autoincrement())
  username  String   @db.VarChar(32)
  roundsWon Int?
  game      Int?
  winner    Boolean?
  Card      Card[]
  Game      Game?    @relation(fields: [game], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Player_ibfk_1")

  @@index([game], map: "game")
}

model Series {
  id                      Int    @id @default(autoincrement())
  seriesColor             String @db.VarChar(7)
  score                   Int?
  length                  Int?
  start                   Int
  end                     Int
  round                   Int
  Card_Series_startToCard Card   @relation("Series_startToCard", fields: [start], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Series_ibfk_1")
  Card_Series_endToCard   Card   @relation("Series_endToCard", fields: [end], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Series_ibfk_2")
  Round                   Round  @relation(fields: [round], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Series_ibfk_3")

  @@index([end], map: "end")
  @@index([start], map: "start")
  @@index([round], map: "round")
}

model Round {
  id     Int      @id @default(autoincrement())
  game   Int
  Card   Card[]
  Game   Game     @relation(fields: [game], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "Round_ibfk_1")
  Series Series[]

  @@index([game], map: "game")
}